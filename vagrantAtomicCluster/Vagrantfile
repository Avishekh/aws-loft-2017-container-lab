# -*- mode: ruby -*-
# vi: set ft=ruby :

PUBLIC_ADDRESS="10.1.2.3"

Vagrant.configure(2) do |config|

  config.vm.box = "rhelah"
  config.vm.hostname = "deploy.example.com"
  config.registration.skip = true

  # disable default sync for now
  config.vm.synced_folder "./", "/vagrant", disabled: true

  config.vm.provider "libvirt" do |v, override|
    v.memory = 4096
    v.cpus = 2
  end
  config.vm.network "private_network", ip: "#{PUBLIC_ADDRESS}"

  # Add entries to /etc/hosts and configure them as insecure registries
  config.vm.provision "shell", inline: <<-'SHELL'
    echo '10.1.2.4 registry.access.redhat.com' >> /etc/hosts
    echo '10.1.2.2 rhel-cdk.example.com' >> /etc/hosts
    echo -e 'INSECURE_REGISTRY=" --insecure-registry rhel-cdk.example.com:5000 --insecure-registry registry.access.redhat.com"' >> /etc/sysconfig/docker
    systemctl restart docker
  SHELL

  # Copy the oc and oadm binaries to the host
  config.vm.provision "shell", inline: <<-'SHELL'
    docker run --rm --entrypoint /bin/bash registry.access.redhat.com/openshift3/ose:v3.1.1.6 -c "cat /usr/bin/oc" > /usr/local/bin/oc
    docker run --rm --entrypoint /bin/bash registry.access.redhat.com/openshift3/ose:v3.1.1.6 -c "cat /usr/bin/oadm" > /usr/local/bin/oadm
    chmod +x /usr/local/bin/oc
    chmod +x /usr/local/bin/oadm
    hostnamectl set-hostname deploy.example.com
  SHELL

  # Create the openshift configuration and modify it
  config.vm.provision "shell", inline: <<-'SHELL'
    mkdir -p /var/lib/origin/openshift.local.config
    /usr/bin/docker run --rm --net host --privileged -v /var/lib/origin/openshift.local.config/:/var/lib/origin/openshift.local.config/ registry.access.redhat.com/openshift3/ose:v3.1.1.6 start --write-config /var/lib/origin/openshift.local.config/
    sed -i.orig -e "s/\(.*subdomain:\).*/\1 deploy.example.com.10.1.2.3.xip.io/g" \
                -e "s/\(.*masterPublicURL:\).*/\1 https:\/\/10.1.2.3:8443/g" \
                -e "s/\(.*publicURL:\).*/\1 https:\/\/10.1.2.3:8443\/console\//g" \
                -e "s/\(.*assetPublicURL:\).*/\1 https:\/\/10.1.2.3:8443\/console\//g" \
                -e "/corsAllowedOrigins:/,/- localhost/c\corsAllowedOrigins:\n- .*" \
		/var/lib/origin/openshift.local.config/master/master-config.yaml
  SHELL

  # Add the systemd unit file for openshift to the box
  config.vm.provision "file",
    source: "./openshift.service",
    destination: "/tmp/openshift.service"

  # Start openshift
  config.vm.provision "shell", inline: <<-SHELL
    mv /tmp/openshift.service /etc/systemd/system/openshift.service
  SHELL
  config.vm.provision "shell", inline: <<-SHELL
    systemctl daemon-reload
    systemctl enable openshift
    systemctl start openshift
  SHELL

  # Allow containers in openshift to run as root
  config.vm.provision "shell", inline: <<-SHELL
    sleep 10
    while ! /usr/local/bin/oadm policy add-scc-to-group anyuid system:authenticated  --config=/var/lib/origin/openshift.local.config/master/admin.kubeconfig &>/dev/null ; do
        sleep 10
    done
  SHELL

  # Set up a router
  config.vm.provision "shell", inline: <<-'SHELL'
    export KUBECONFIG=/var/lib/origin/openshift.local.config/master/admin.kubeconfig
    echo '{"kind":"ServiceAccount","apiVersion":"v1","metadata":{"name":"router"}}' \
    | /usr/local/bin/oc create -f -
    /usr/local/bin/oc get scc privileged -o json \
    | sed '/\"users\"/a \"system:serviceaccount:default:router\",'  \
    | /usr/local/bin/oc replace scc privileged -f -
    /usr/local/bin/oadm router --create \
      --expose-metrics=true \
      --credentials=/var/lib/origin/openshift.local.config/master/openshift-router.kubeconfig \
      --service-account=router
  SHELL
end
