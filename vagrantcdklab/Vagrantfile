# -*- mode: ruby -*-
# vi: set ft=ruby :

# The private network IP of the VM. You will use this IP to connect to OpenShift.
PUBLIC_ADDRESS="10.1.2.2"

# Number of virtualized CPUs
VM_CPU = ENV['VM_CPU'] || 2

# Amount of available RAM
VM_MEMORY = ENV['VM_MEMORY'] || 6144

# Validate required plugins
REQUIRED_PLUGINS = %w(vagrant-service-manager vagrant-registration)
errors = []

def message(name)
  "#{name} plugin is not installed, run `vagrant plugin install #{name}` to install it."
end
# Validate and collect error message if plugin is not installed
REQUIRED_PLUGINS.each { |plugin| errors << message(plugin) unless Vagrant.has_plugin?(plugin) }
unless errors.empty?
  msg = errors.size > 1 ? "Errors: \n* #{errors.join("\n* ")}" : "Error: #{errors.first}"
  fail Vagrant::Errors::VagrantError.new, msg
end

Vagrant.configure(2) do |config|
  config.vm.box = "cdkv2"

  # Mount this directory into the guest under ~/labs
  config.vm.synced_folder "../labs/", "/home/vagrant/labs", type: "sshfs"

  # Add rhel-cdk.example.com to /etc/hosts
  config.vm.provision "shell",
    inline: "grep rhel-cdk.example.com /etc/hosts || echo '127.0.0.1 rhel-cdk.example.com' >> /etc/hosts"
  # Add deploy.example.com to /etc/hosts
  config.vm.provision "shell",
    inline: "grep deploy.example.com /etc/hosts || echo '10.1.2.3 deploy.example.com' >> /etc/hosts"
  # Add registry.access.redhat.com to /etc/hosts
  config.vm.provision "shell",
    inline: "grep registry.access.redhat.com /etc/hosts || echo '10.1.2.4 registry.access.redhat.com' >> /etc/hosts"

  # Add registry.access.redhat.com to insecure registry
  config.vm.provision "shell", inline: <<-SHELL
    sed -i -e "s/# INSECURE_REGISTRY='--insecure-registry'/INSECURE_REGISTRY='--insecure-registry registry.access.redhat.com'/g" /etc/sysconfig/docker
    systemctl restart docker
  SHELL

  # Add yum repo
  config.vm.provision "file",
    source: "./custom.repo",
    destination: "/tmp/custom.repo"
  config.vm.provision "shell", inline: "mv /tmp/custom.repo /etc/yum.repos.d/custom.repo"

  config.vm.provider "virtualbox" do |v, override|
    v.memory = VM_MEMORY
    v.cpus   = VM_CPU
    v.customize ["modifyvm", :id, "--ioapic", "on"]
    v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
  end

  config.vm.provider "libvirt" do |v, override|
    v.memory = VM_MEMORY
    v.cpus   = VM_CPU
    v.driver = "kvm"
  end

  config.vm.network "private_network", ip: "#{PUBLIC_ADDRESS}"

  # Skip vagrant registration because we are using offline repos
  config.registration.skip = true

  config.servicemanager.services = "docker"
end
